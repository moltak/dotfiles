[user]
	name = KyungHo Jung
	email = moltak@gmail.com

[alias]
  graph = log --graph --date-order -C -M --pretty=format:\"%C(blue)%h%C(reset) (%ar) [%an] %C(yellow)%d%Creset %s\" --all --date=short
  l = !git graph | less -FXRS
  h = !git graph -1 | less -FXRS
  ls = log --graph -C -M --pretty=format:"%C(yellow)%h%Cgreen%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --all --date=short
  ll = log --pretty=format:"%C(yellow)%h%Cgreen%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --all --numstat
  ffs = flow feature start
  fff = flow feature finish
  rr = rebase -i HEAD~2
  update-index-assume = update-index --assume-unchanged
  update-index-no-assume = update-index --no-assume-unchanged
  update-index-really-refresh = update-index --really-refresh
  show-alias = "!sed -n '/\\[alias\\]/,/^\\[.*\\]/p' ~/.gitconfig | grep -v '^\\[' | sed 's/^  //'"
  show-hash = !"git log --pretty=format:"%H" -n 1|grep -v grep|cut -c 1-10|xargs echo $(git rev-parse --abbrev-ref HEAD|cut -c 1-3)"


[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process

# 아래 설정은 geeknews에서 참고
# https://news.hada.io/topic?id=19441&utm_source=slack&utm_medium=bot&utm_campaign=T03LB35LVEW 


# 기본적으로 Git은 브랜치를 알파벳 순으로 정렬하지만, 최근 커밋 날짜 순으로 정렬하는 것이 더 유용할 수 있음
# 다음 설정을 통해 브랜치를 최근 커밋 순으로 정렬하고, 열 형식으로 표시할 수 있음 
[column]  
  ui = auto  


[branch]  
  sort = -committerdate  

# 태그를 알파벳 순이 아닌 버전 순으로 정렬하려면 다음 설정을 사용 
[tag]
  sort = version:refname  
  

# git init 때 브랜치 이름
[init]  
  defaultBranch = main  


# 기본 diff 알고리즘을 'histogram'으로 변경하여 더 정확한 비교를 수행
# 코드 이동을 감지하고 색상으로 표시하려면 다음 설정을 추가 
[diff]
  algorithm = histogram  
  colorMoved = plain  
  mnemonicPrefix = true  
  renames = true  


# 다음 설정을 통해 push 동작을 개선할 수 있음 
[push]  
  default = simple  
  autoSetupRemote = true  
  followTags = true  


# fetch 시 불필요한 브랜치와 태그를 자동으로 제거하려면 다음 설정을 사용 
[fetch]  
  prune = true  
  pruneTags = true  
  all = true  


# 명령어 입력 시 오타를 감지하고 제안하도록 설정하려면 다음을 사용 
[help]
  autocorrect = prompt  


# 커밋 메시지 작성 시 변경된 내용을 함께 표시하려면 다음 설정을 추가 
[commit]  
  verbose = true  
	template = ~/.stCommitMsg


# 이전의 충돌 해결을 자동으로 재사용하려면 다음 설정을 사용 
[rerere]  
  enabled = true  
  autoupdate = true  


[core]  
  # 아래 두개는 내 설정
  editor = nvim
  excludesfile = ~/.gitignore  
  # git status 등의 성능을 향상시키려면 fsmonitor, untrackedCache를 사용
  fsmonitor = true  
  untrackedCache = true  

  # delta 추가해본다
  pager = delta


# 아래 두개 모두 delta 설정
[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true  # use n and N to move between diff sections
    dark = true      # or light = true, or omit for auto-detection
    side-by-side = true
    line-numbers = true


# 리베이스 시 자동으로 스쿼시 및 스태시를 수행하려면 다음 설정을 사용 
[rebase]  
  autoSquash = true  
  autoStash = true  
  updateRefs = true  


# 병합 충돌 시 기본 버전도 함께 표시하려면 다음 설정을 고려 
[merge]
  conflictstyle = zdiff3  


#  git pull 시 자동으로 리베이스를 수행하려면 다음과 같이 설정 
[pull]
  rebase = true  
